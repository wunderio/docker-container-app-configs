### Upstream configuration for PHP FastCGI.

## Add as many servers as needed:
## Cf. http://wiki.nginx.org/HttpUpstreamModule.
## Note that this configuration assumes by default that keepalive
## upstream connections are supported.

## Add as many servers as needed. Cf. http://wiki.nginx.org/HttpUpstreamModule.
## For the name it is possible to use a domain name, an address, port or unix socket.
upstream phpcgi {
  server 127.0.0.1:9000;
  ## Request is passed to the server with the least number
  ## of active connections, taking into account weights of servers.
  least_conn;
  ## Create a backend connection cache.
  keepalive 20;
}

## Drupal application fastcgi definitions

fastcgi_param  QUERY_STRING       $query_string;
fastcgi_param  REQUEST_METHOD     $request_method;
fastcgi_param  CONTENT_TYPE       $content_type;
fastcgi_param  CONTENT_LENGTH     $content_length;

fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;
fastcgi_param  REQUEST_URI        $request_uri;
fastcgi_param  DOCUMENT_URI       $document_uri;
fastcgi_param  DOCUMENT_ROOT      $document_root;
fastcgi_param  SERVER_PROTOCOL    $server_protocol;
fastcgi_param  HTTPS              $https if_not_empty;

fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
fastcgi_param  SERVER_SOFTWARE    nginx;

fastcgi_param  REMOTE_ADDR        $remote_addr;
fastcgi_param  REMOTE_PORT        $remote_port;
fastcgi_param  SERVER_ADDR        $server_addr;
fastcgi_param  SERVER_PORT        $server_port;
fastcgi_param  SERVER_NAME        $server_name;

fastcgi_param  REDIRECT_STATUS    200;

## Nginx FCGI specific directives.
fastcgi_buffer_size 32k;
fastcgi_buffers 64 8k;
#   - fastcgi_busy_buffers_size >= max(fastcgi_buffer_size, one fastcgi_buffers.size)
#   - fastcgi_busy_buffers_size =< fastcgi_buffers.size * (fastcgi_buffers.number - 1)
fastcgi_busy_buffers_size 32k;
fastcgi_intercept_errors on;

fastcgi_request_buffering off;

# We timeout after 30s if the application cannot start processing the request.
fastcgi_connect_timeout 30s;
# Once the application started processing pass timeout responsibility to upstream.
fastcgi_read_timeout 14400s;
fastcgi_send_timeout 14400s;
fastcgi_index index.php;
## Hide the Drupal 7 header X-Generator.
fastcgi_hide_header 'X-Generator';
## Hide the PHP X-Powered-By header.
fastcgi_hide_header 'X-Powered-By';

## Nginx Drupal application specific directives
location "/" {

  location "/" {
    try_files bug.nonexistent @drupal;
  }

  ## Handle D7 image styles
  location ~* /files/styles/ {
    expires 365d;
    try_files $uri @drupal;
  }

  ## Handle D6 imagecache
  location ~* /imagecache/ {
    expires 365d;
    try_files $uri @drupal;
  }

  ## Advanced Help module makes each module provided README available.
  location ~* ^/help/[^/]*/README\.txt$ {
    try_files $uri @drupal;
  }

  ## Regular private file serving (i.e. handled by Drupal).
  location ^~ /system/files/ {
    try_files $uri @drupal;
    log_not_found off;
  }

  ## Replicate the Apache <FilesMatch> directive of Drupal standard
  ## .htaccess. Disable access to any code files. Return a 404 to curtail
  ## information disclosure. Hide also the text files.
  location ~* ^(?:.+\.(?:htaccess|make|txt|engine|inc|info|module|profile|po|sh|.*sql|test|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
    return 404;
  }

  ###
  ### Advagg_css and Advagg_js support.
  ###
  location ~* files/advagg_(?:css|js)/ {
    expires       max;
    etag          off;
    access_log    off;
    log_not_found off;
    ## Set the OS file cache.
    open_file_cache max=3000 inactive=120s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
    add_header Cache-Control "no-transform, public";
    add_header Last-Modified "Wed, 20 Jan 1988 04:20:42 GMT";
    add_header Access-Control-Allow-Origin *;
    add_header X-Header "AdvAgg Generator 2.0 CDN";
    try_files $uri @drupal;
  }

  ## Serve static files & images directly, without all standard drupal rewrites, php-fpm etc.
  location ~* ^.+\.(?:css|js|jpe?g|gif|png|ico|svg|swf|docx?|xlsx?|tiff?|txt|cgi|bat|pl|dll|aspx?|exe|class)$ {
    tcp_nodelay     off;
    expires         365d;
    add_header Cache-Control "public";
    ## Set the OS file cache.
    open_file_cache max=10000 inactive=120s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
    try_files $uri =404;
    log_not_found off;
    access_log off;
  }

  ## PDFs and powerpoint files handling.
  location ~* ^.+\.(?:pdf|pptx?)$ {
    expires 365d;
    ## No need to bleed constant updates. Send the all shebang in one
    ## fell swoop.
    try_files $uri =404;
    tcp_nodelay off;
    log_not_found off;
    access_log off;
  }

  # Configure webfont access
  location ~* \.(?:ttf|ttc|otf|eot|woff|woff2|font.css)$ {
    # Uncomment to allow cross domain webfont access
    #add_header "Access-Control-Allow-Origin" "*";

    # Set cache rules for webfonts.
    expires 365d;
    add_header Cache-Control "public";
    ## Set the OS file cache.
    open_file_cache max=10000 inactive=120s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
    try_files $uri =404;
    log_not_found off;
    access_log off;
  }

  ## Serve bigger media/static/archive files directly, without all standard drupal rewrites, php-fpm etc.
  location ~* ^.+\.(?:avi|mpe?g|mov|wmv|mp3|mp4|m4a|ogg|flv|wav|midi|zip|tar|t?gz|rar)$ {
    expires         365d;
    tcp_nodelay     off;
    try_files $uri =404;
    log_not_found off;
    access_log off;
  }

  ## Deny bots on never cached uri without 403 response.
  location ~* ^/(?:user|admin|cart|checkout|logout|abuse|flag) {
    if ( $http_user_agent ~* (?:crawl|goog|yahoo|spider|bot|yandex|bing|tracker|click|parser) ) {
      return 444;
    }
    try_files $uri @drupal;
  }

  location = /robots.txt {
    access_log off;
    try_files $uri @drupal;
  }

  location ~ ".+?\.php(?=$|/)" {


        try_files       $fastcgi_script_name @drupal;

        include conf.d/fastcgi_drupal.conf;
        fastcgi_pass phpcgi;

        # Split the script name from the path info, set it as a variable
        # so that it persists after try_file has resolved the actual filename.
        fastcgi_split_path_info ^(.+?\.php(?=$|/))((?:/.*)?)$;
        set $path_info  $fastcgi_path_info;
      }

}

location "/sites/default/files" {

  location "/sites/default/files" {
    try_files bug.nonexistent @drupal;
  }

  location ~ "." {
    try_files $uri @drupal;
  }

}

# Handle autocomplete to-cleanURLs policy
if ( $args ~* "^q=(?<query_value>.*)" ) {
  rewrite ^/index.php$ $host/?q=$query_value? permanent;
}

location @drupal {
  rewrite . /index.php;
}

## Disallow access to patches directory.
location ^~ /patches { return 404; }

## Disallow access to drush backup directory.
location ^~ /backup { return 404; }

## Most sites won't have configured favicon
## and since its always grabbed, turn it off in access log
## and turn off it's not-found error in the error log
location = /favicon.ico { access_log off; log_not_found off; try_files /favicon.ico @empty; }

## Same for apple-touch-icon files
location = /apple-touch-icon.png { access_log off; log_not_found off; }
location = /apple-touch-icon-precomposed.png { access_log off; log_not_found off; }

## Return an in memory 1x1 transparent GIF.
location @empty {
    expires 30d;
    empty_gif;
}

## Rather than just denying .ht* in the config, why not deny
## access to all .invisible files
location ~ /\. { return 404; access_log off; log_not_found off; }

## Any other attempt to access PHP files returns a 404.
location ~* ^.+\.php$ {
    return 404;
}
